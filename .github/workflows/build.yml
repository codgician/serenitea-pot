name: build

on:
  pull_request:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
    - '.gitignore'
  repository_dispatch:
    types: [ build ]
  workflow_dispatch:

concurrency: evergreen

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      darwin: ${{ steps.get_matrix.outputs.darwin }}
      linux: ${{ steps.get_matrix.outputs.linux }}
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check flake
        run: nix flake check --all-systems
      - name: Calculate strategy matrix
        id: get_matrix
        run: |
          linux=$(nix eval .\#nixosConfigurations --raw \
            --apply "x: builtins.toJSON (builtins.filter (y: y.system == \"x86_64-linux\") (map (y: { name = y; system = x.\${y}.pkgs.system; }) (builtins.attrNames x)))")
          darwin=$(nix eval .\#darwinConfigurations --raw \
            --apply "x: builtins.toJSON (map (y: { name = y; system = x.\${y}.pkgs.system; }) (builtins.attrNames x))")
          echo "linux=$linux" >> $GITHUB_OUTPUT
          echo "darwin=$darwin" >> $GITHUB_OUTPUT

  build-linux:
    needs: validate
    strategy:
      matrix: 
        host: ${{ fromJson(needs.validate.outputs.linux) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Free disk space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          swap-storage: false
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: 'nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz'
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = i686-linux
            substituters = https://cache.nixos.org https://cache.saumon.network/proxmox-nixos
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= proxmox-nixos:nveXDuVVhFDRFx8Dn19f1WDEaNRJjPrF2CPD2D+m1ys=
      - uses: cachix/cachix-action@v15
        with:
          name: codgician
          extraPullNames: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Build
        run: |
          nix build .#nixosConfigurations.${{ matrix.host.name }}.config.system.build.toplevel

  build-darwin:
    needs: validate
    runs-on: macos-latest
    strategy:
      matrix: 
        host: ${{ fromJson(needs.validate.outputs.darwin) }}
      fail-fast: false
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: 'nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz'
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = x86_64-darwin
            substituters = https://cache.nixos.org https://cache.saumon.network/proxmox-nixos
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= proxmox-nixos:nveXDuVVhFDRFx8Dn19f1WDEaNRJjPrF2CPD2D+m1ys=
      - uses: cachix/cachix-action@v15
        with:
          name: codgician
          extraPullNames: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Build
        run: |
          nix build .#darwinConfigurations.${{ matrix.host.name }}.config.system.build.toplevel       