name: build
on:
  pull_request:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
  repository_dispatch:
    types: [build]
  workflow_dispatch:
# Limit one run for each branch for saving resources
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  validate:
    runs-on: ubuntu-24.04
    outputs:
      darwin: ${{ steps.get_matrix.outputs.darwin }}
      linux: ${{ steps.get_matrix.outputs.linux }}
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check flake
        run: nix flake check --all-systems --accept-flake-config
      - name: Calculate strategy matrix
        id: get_matrix
        run: |
          linux=$(nix eval .\#nixosConfigurations --raw \
            --apply "x: builtins.toJSON (map (y: { name = y; system = x.\${y}.pkgs.system; }) (builtins.attrNames x))")
          darwin=$(nix eval .\#darwinConfigurations --raw \
            --apply "x: builtins.toJSON (map (y: { name = y; system = x.\${y}.pkgs.system; }) (builtins.attrNames x))")
          echo "linux=$linux" >> $GITHUB_OUTPUT
          echo "darwin=$darwin" >> $GITHUB_OUTPUT
  build-linux:
    needs: validate
    strategy:
      matrix:
        host: ${{ fromJson(needs.validate.outputs.linux) }}
      fail-fast: false
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Free disk space
        run: |
          curl -fsSL https://raw.githubusercontent.com/apache/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash
          sudo docker image prune --all --force || true
      - uses: docker/setup-qemu-action@v3
        if: matrix.host.system == 'aarch64-linux'
        with:
          platforms: 'arm64'
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: 'nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz'
          extra_nix_config: |
            accept-flake-config = true
            system-features = kvm big-parallel gccarch-x86-64-v3
            experimental-features = nix-command flakes
            builders-use-substitutes = true
            max-jobs = auto
            extra-platforms = ${{ matrix.host.system == 'aarch64-linux' && 'aarch64-linux' || 'i686-linux' }}
      - uses: cachix/cachix-action@v15
        with:
          name: codgician
          extraPullNames: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Build
        run: |
          nix build .#nixosConfigurations.${{ matrix.host.name }}.config.system.build.toplevel
  build-darwin:
    needs: validate
    runs-on: macos-latest
    strategy:
      matrix:
        host: ${{ fromJson(needs.validate.outputs.darwin) }}
      fail-fast: false
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: 'nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz'
          extra_nix_config: |
            accept-flake-config = true
            system-features = big-parallel
            experimental-features = nix-command flakes
            builders-use-substitutes = true
            max-jobs = auto
            extra-platforms = x86_64-darwin
      - uses: cachix/cachix-action@v15
        with:
          name: codgician
          extraPullNames: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Build
        run: |
          nix build .#darwinConfigurations.${{ matrix.host.name }}.config.system.build.toplevel
